# Users can import user customized yaml files or library provided default yaml files
includes: []
  # - $/configs/defaults.yaml
  # In the above example path, '$/' indicates the library directory which contains the config folder

preprocessing_args:
 val_split_ratio: 0
 word_emb_size: 300

model_args:
  graph_construction_name: "node_emb"
  graph_initialization_name: "defaults"
  graph_embedding_name: "gcn"
  decoder_name: "stdrnn"

  graph_construction_args:
    graph_construction_share:
      root_dir: "examples/pytorch/nmt/data"
      topology_subdir: 'NodeEmbGraph'
      share_vocab: false
      thread_number: 4

    
    graph_construction_private:
      edge_strategy: 'homogeneous'
      merge_strategy: 'tailhead'
      sequential_link: true
      as_node: false
      sim_metric_type: 'weighted_cosine'
      num_heads: 1
      top_k_neigh: null
      epsilon_neigh: 0.5
      smoothness_ratio: 0.1
      connectivity_ratio: 0.05
      sparsity_ratio: 0.1

  graph_initialization_args:
    input_size: 300
    hidden_size: 300
    word_dropout: 0.2
    rnn_dropout: 0.3
    fix_bert_emb: false
    fix_word_emb: false
    embedding_style:
      single_token_item: true
      emb_strategy: "w2v_bilstm"
      num_rnn_layers: 1
      bert_model_name: null
      bert_lower_case: null

  graph_embedding_args:
    graph_embedding_share:
      num_layers: 3
      input_size: 300
      hidden_size: 300
      output_size: 300
      direction_option: "bi_fuse"
      feat_drop: 0.2

    graph_embedding_private:
      gcn_norm: 'both'
      weight: true
      bias: true
      activation: "relu"
      allow_zero_in_degree: false
      use_edge_weight: true

  decoder_args:
    rnn_decoder_share:
      rnn_type: "lstm"
      input_size: 300
      hidden_size: 512
      rnn_emb_input_size: 300
      use_copy: false
      use_coverage: false
      graph_pooling_strategy: "max"
      attention_type: "sep_diff_encoder_type" # "sep_diff_encoder_type"
      fuse_strategy: "concatenate"
      dropout: 0.3

    rnn_decoder_private:
      max_decoder_step: 50
      node_type_num: null
      tgt_emb_as_output_layer: false

training_args:
  name: "test"
  log_dir: "examples/pytorch/nmt/log/"
  learning_rate: 0.001
  lr_start_decay_epoch: 100
  lr_decay_per_epoch: 3
  min_lr: 0.00001
  lr_decay_rate: 0.9
  loss_display_step: 50
  eval_display_number: 1

  warmup_steps: 300
  max_steps: 28000

  grad_clip: 1
  batch_size: 20
  num_works: 5
  coverage_weight: 0.3

inference_args:
  beam_size: 4

checkpoint_args:
  checkpoint_save_path: examples/pytorch/nmt/save

env_args:
  use_gpu: 1
  seed: 1236
  gpuid: -1


