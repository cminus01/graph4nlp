# Users can import user customized yaml files or library provided default yaml files
includes: []
  # - $/configs/defaults.yaml
  # In the above example path, '$/' indicates the library directory which contains the config folder


preprocessing_args:
  min_freq: 1
  pretrained_word_emb_name: "6B"
  pretrained_word_emb_url: null
  pretrained_word_emb_cache_dir: ".vector_cache"
  word_emb_size: 300


model_args:
  graph_construction_name: "dependency"
  graph_initialization_name: "defaults"
  graph_embedding_name: "gcn"
  decoder_name: "stdrnn"


  graph_construction_args:
    graph_construction_share:
      root_dir: "examples/pytorch/semantic_parsing/graph2seq/jobs"
      topology_subdir: 'DependencyGraph'
      share_vocab: true
      thread_number: 4

      nlp_processor_args:
        name: "stanza"
        args:
          annotators: ["tokenize,ssplit,pos,depparse"]
          corenlp_dir: "./corenlp"
          endpoint: "http://localhost:9002"
          memory: "4G"
          properties:
            tokenize.options: 
              splitHyphenated: False
              normalizeParentheses: False
              normalizeOtherBrackets: False
            tokenize.whitespace: True
            ssplit.isOneSentence: True
      
    graph_construction_private:
      edge_strategy: 'homogeneous'
      merge_strategy: 'tailhead'
      sequential_link: true
      as_node: false

  graph_initialization_args:
    input_size: 300
    hidden_size: 300
    word_dropout: 0.2
    rnn_dropout: 0.3
    fix_bert_emb: false
    fix_word_emb: false
    embedding_style:
      single_token_item: true
      emb_strategy: "w2v_bilstm"
      num_rnn_layers: 1
      bert_model_name: null
      bert_lower_case: null

  graph_embedding_args:
    graph_embedding_share:
      num_layers: 3
      input_size: 300
      hidden_size: 300
      output_size: 300
      direction_option: "undirected"
      feat_drop: 0.2

    graph_embedding_private:
      gcn_norm: 'both'
      weight: true
      bias: true
      activation: null
      allow_zero_in_degree: false
      use_edge_weight: false

  decoder_args:
    rnn_decoder_share:
      rnn_type: "lstm"
      input_size: 300
      hidden_size: 512
      rnn_emb_input_size: 300
      use_copy: true
      use_coverage: true
      graph_pooling_strategy: "max"
      attention_type: "sep_diff_encoder_type"
      fuse_strategy: "concatenate"
      dropout: 0.3

    rnn_decoder_private:
      max_decoder_step: 50
      node_type_num: null
      tgt_emb_as_output_layer: true

training_args:
  log_file: "examples/pytorch/semantic_parsing/graph2seq/log/ggnn.txt"
  learning_rate: 0.001
  lr_start_decay_epoch: 20
  lr_decay_per_epoch: 5
  min_lr: 0.0001
  lr_decay_rate: 0.9
  loss_display_step: 3
  grad_clip: 5
  batch_size: 20
  num_works: 5
  coverage_weight: 0.3


inference_args:
  beam_size: 4


evaluation_args:
  # Metrics for evaluation
  

checkpoint_args:
  checkpoint_save_path: "examples/pytorch/semantic_parsing/graph2seq/save"


env_args:
  use_gpu: 1
  seed: 0
  gpuid: -1
